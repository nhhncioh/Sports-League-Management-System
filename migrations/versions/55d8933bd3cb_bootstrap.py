"""bootstrap

Revision ID: 55d8933bd3cb
Revises: 
Create Date: 2025-09-16 09:16:13.588898

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '55d8933bd3cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('primary_color', sa.String(length=32), nullable=True),
    sa.Column('logo_url', sa.String(length=512), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('email_message',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('to_email', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('template_key', sa.String(length=128), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('QUEUED', 'SENT', 'FAILED', name='email_status', native_enum=False), nullable=False),
    sa.Column('meta', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('email_message', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_message_org_id'), ['org_id'], unique=False)

    op.create_table('league',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sport', sa.Enum('BASKETBALL', 'SOCCER', 'HOCKEY', 'VOLLEYBALL', 'OTHER', name='sport_type', native_enum=False), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('league', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_league_org_id'), ['org_id'], unique=False)

    op.create_table('user',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'COACH', 'SCOREKEEPER', 'PLAYER', 'VIEWER', name='user_role', native_enum=False), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_id', 'email', name='uq_user_org_email')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_org_id'), ['org_id'], unique=False)

    op.create_table('venue',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('court_label', sa.String(length=64), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('venue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_venue_org_id'), ['org_id'], unique=False)

    op.create_table('waiver',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('version', sa.String(length=64), nullable=False),
    sa.Column('html', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_id', 'version', name='uq_waiver_org_version')
    )
    with op.batch_alter_table('waiver', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_waiver_org_id'), ['org_id'], unique=False)

    op.create_table('audit_log',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('entity_type', sa.String(length=128), nullable=False),
    sa.Column('entity_id', sa.String(length=36), nullable=True),
    sa.Column('meta', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_log_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_user_id'), ['user_id'], unique=False)

    op.create_table('season',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('league_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('default_game_length_minutes', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['league.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('season', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_season_league_id'), ['league_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_season_org_id'), ['org_id'], unique=False)

    op.create_table('team',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('season_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('coach_name', sa.String(length=255), nullable=True),
    sa.Column('coach_email', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_team_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_team_season_id'), ['season_id'], unique=False)

    op.create_table('blackout',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('scope', sa.Enum('VENUE', 'TEAM', name='blackout_scope', native_enum=False), nullable=False),
    sa.Column('venue_id', sa.String(length=36), nullable=True),
    sa.Column('team_id', sa.String(length=36), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['venue_id'], ['venue.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blackout', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blackout_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_blackout_team_id'), ['team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_blackout_venue_id'), ['venue_id'], unique=False)

    op.create_table('game',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('season_id', sa.String(length=36), nullable=False),
    sa.Column('home_team_id', sa.String(length=36), nullable=True),
    sa.Column('away_team_id', sa.String(length=36), nullable=True),
    sa.Column('venue_id', sa.String(length=36), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('SCHEDULED', 'IN_PROGRESS', 'FINAL', 'FORFEIT', 'CANCELED', name='game_status', native_enum=False), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['away_team_id'], ['team.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['home_team_id'], ['team.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['venue_id'], ['venue.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('game', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_away_team_id'), ['away_team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_game_home_team_id'), ['home_team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_game_org_id'), ['org_id'], unique=False)
        batch_op.create_index('ix_game_org_season', ['org_id', 'season_id'], unique=False)
        batch_op.create_index('ix_game_org_start_time', ['org_id', 'start_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_game_season_id'), ['season_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_game_venue_id'), ['venue_id'], unique=False)

    op.create_table('player',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('team_id', sa.String(length=36), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('jersey_number', sa.Integer(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_player_org_id'), ['org_id'], unique=False)
        batch_op.create_index('ix_player_org_team', ['org_id', 'team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_player_team_id'), ['team_id'], unique=False)

    op.create_table('registration',
    sa.Column('org_id', sa.String(length=36), nullable=False),
    sa.Column('season_id', sa.String(length=36), nullable=False),
    sa.Column('team_id', sa.String(length=36), nullable=True),
    sa.Column('player_id', sa.String(length=36), nullable=True),
    sa.Column('registrant_name', sa.String(length=255), nullable=False),
    sa.Column('registrant_email', sa.String(length=255), nullable=False),
    sa.Column('fee_cents', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_status', sa.Enum('UNPAID', 'PAID', 'WAIVED', name='payment_status', native_enum=False), nullable=False),
    sa.Column('waiver_signed', sa.Boolean(), nullable=False),
    sa.Column('waiver_signed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('registration', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_registration_org_id'), ['org_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_player_id'), ['player_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_season_id'), ['season_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_team_id'), ['team_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('registration', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registration_team_id'))
        batch_op.drop_index(batch_op.f('ix_registration_season_id'))
        batch_op.drop_index(batch_op.f('ix_registration_player_id'))
        batch_op.drop_index(batch_op.f('ix_registration_org_id'))

    op.drop_table('registration')
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_player_team_id'))
        batch_op.drop_index('ix_player_org_team')
        batch_op.drop_index(batch_op.f('ix_player_org_id'))

    op.drop_table('player')
    with op.batch_alter_table('game', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_venue_id'))
        batch_op.drop_index(batch_op.f('ix_game_season_id'))
        batch_op.drop_index('ix_game_org_start_time')
        batch_op.drop_index('ix_game_org_season')
        batch_op.drop_index(batch_op.f('ix_game_org_id'))
        batch_op.drop_index(batch_op.f('ix_game_home_team_id'))
        batch_op.drop_index(batch_op.f('ix_game_away_team_id'))

    op.drop_table('game')
    with op.batch_alter_table('blackout', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blackout_venue_id'))
        batch_op.drop_index(batch_op.f('ix_blackout_team_id'))
        batch_op.drop_index(batch_op.f('ix_blackout_org_id'))

    op.drop_table('blackout')
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_team_season_id'))
        batch_op.drop_index(batch_op.f('ix_team_org_id'))

    op.drop_table('team')
    with op.batch_alter_table('season', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_season_org_id'))
        batch_op.drop_index(batch_op.f('ix_season_league_id'))

    op.drop_table('season')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_org_id'))

    op.drop_table('audit_log')
    with op.batch_alter_table('waiver', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_waiver_org_id'))

    op.drop_table('waiver')
    with op.batch_alter_table('venue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_venue_org_id'))

    op.drop_table('venue')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_org_id'))

    op.drop_table('user')
    with op.batch_alter_table('league', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_org_id'))

    op.drop_table('league')
    with op.batch_alter_table('email_message', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_message_org_id'))

    op.drop_table('email_message')
    op.drop_table('organization')
    # ### end Alembic commands ###
